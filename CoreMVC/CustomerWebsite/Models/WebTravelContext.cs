// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CustomerWebsite.Models;

public partial class webTravelContext : DbContext
{
    public webTravelContext()
    {
    }
    public webTravelContext(DbContextOptions<webTravelContext> options)
        : base(options)
    {

    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer(
            "Server=127.0.0.1,14330;Database=web-travel;User ID=sqlserver;Password=9!h?aG}!+Q]2rB;Encrypt=True;TrustServerCertificate=True;"
        );
    }

    public virtual DbSet<AspNetRole> AspNetRoles { get; set; }

    public virtual DbSet<AspNetRoleClaim> AspNetRoleClaims { get; set; }

    public virtual DbSet<AspNetUser> AspNetUsers { get; set; }

    public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }

    public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }

    public virtual DbSet<AspNetUserToken> AspNetUserTokens { get; set; }

    public virtual DbSet<Coupon> Coupons { get; set; }

    public virtual DbSet<CouponPic> CouponPics { get; set; }

    public virtual DbSet<Coupon_CustomerLevel> Coupon_CustomerLevels { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<CustomerBlacklist> CustomerBlacklists { get; set; }

    public virtual DbSet<CustomerCouponsRecord> CustomerCouponsRecords { get; set; }

    public virtual DbSet<CustomerLevel> CustomerLevels { get; set; }

    public virtual DbSet<CustomerLoginHistory> CustomerLoginHistories { get; set; }

    public virtual DbSet<CustomerOrder> CustomerOrders { get; set; }

    public virtual DbSet<CustomerOrderFeedback> CustomerOrderFeedbacks { get; set; }

    public virtual DbSet<CustomerOrderMemberInfo> CustomerOrderMemberInfos { get; set; }

    public virtual DbSet<CustomerProfile> CustomerProfiles { get; set; }

    public virtual DbSet<CustomerSupportFeedback> CustomerSupportFeedbacks { get; set; }

    public virtual DbSet<CustomerSupportMessage> CustomerSupportMessages { get; set; }

    public virtual DbSet<CustomerSupportTicket> CustomerSupportTickets { get; set; }

    public virtual DbSet<CustomerTripProject> CustomerTripProjects { get; set; }

    public virtual DbSet<DateDimension> DateDimensions { get; set; }

    public virtual DbSet<District> Districts { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<EmployeeProfile> EmployeeProfiles { get; set; }

    public virtual DbSet<EmployeeRole> EmployeeRoles { get; set; }

    public virtual DbSet<FAQ> FAQs { get; set; }

    public virtual DbSet<FAQCategory> FAQCategorys { get; set; }

    public virtual DbSet<GroupLocation> GroupLocations { get; set; }

    public virtual DbSet<GroupMessage> GroupMessages { get; set; }

    public virtual DbSet<GroupPhoto> GroupPhotos { get; set; }

    public virtual DbSet<Hotel> Hotels { get; set; }

    public virtual DbSet<HotelKeyword> HotelKeywords { get; set; }

    public virtual DbSet<HotelPic> HotelPics { get; set; }

    public virtual DbSet<Keyword> Keywords { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<LocationKeyword> LocationKeywords { get; set; }

    public virtual DbSet<LocationPic> LocationPics { get; set; }

    public virtual DbSet<NewsPic> NewsPics { get; set; }

    public virtual DbSet<NewsTable> NewsTables { get; set; }

    public virtual DbSet<OrderPaymentInfo> OrderPaymentInfos { get; set; }

    public virtual DbSet<OrderStatus> OrderStatuses { get; set; }

    public virtual DbSet<PaymentStatus> PaymentStatuses { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductAnalysis> ProductAnalyses { get; set; }

    public virtual DbSet<ProductPic> ProductPics { get; set; }

    public virtual DbSet<Products_Hotel> Products_Hotels { get; set; }

    public virtual DbSet<Products_Location> Products_Locations { get; set; }

    public virtual DbSet<Products_Promotion> Products_Promotions { get; set; }

    public virtual DbSet<Products_Restaurant> Products_Restaurants { get; set; }

    public virtual DbSet<Products_Transportation> Products_Transportations { get; set; }

    public virtual DbSet<Promotion> Promotions { get; set; }

    public virtual DbSet<Region> Regions { get; set; }

    public virtual DbSet<Restaurant> Restaurants { get; set; }

    public virtual DbSet<RestaurantKeyword> RestaurantKeywords { get; set; }

    public virtual DbSet<RestaurantPic> RestaurantPics { get; set; }

    public virtual DbSet<SemiSelfProduct> SemiSelfProducts { get; set; }

    public virtual DbSet<Semi_Hotel> Semi_Hotels { get; set; }

    public virtual DbSet<Semi_Location> Semi_Locations { get; set; }

    public virtual DbSet<Semi_Transportation> Semi_Transportations { get; set; }

    public virtual DbSet<SerialControl> SerialControls { get; set; }

    public virtual DbSet<SupportAnalysis> SupportAnalyses { get; set; }

    public virtual DbSet<TicketPriority> TicketPriorities { get; set; }

    public virtual DbSet<TicketStatus> TicketStatuses { get; set; }

    public virtual DbSet<TicketType> TicketTypes { get; set; }

    public virtual DbSet<TourGroup> TourGroups { get; set; }

    public virtual DbSet<TourGroupGuest> TourGroupGuests { get; set; }

    public virtual DbSet<TourGroupMember> TourGroupMembers { get; set; }

    public virtual DbSet<TransportKeyword> TransportKeywords { get; set; }

    public virtual DbSet<TransportPic> TransportPics { get; set; }

    public virtual DbSet<Transportation> Transportations { get; set; }

    public virtual DbSet<TripProjectDetail> TripProjectDetails { get; set; }

    public virtual DbSet<Vendor> Vendors { get; set; }

    public virtual DbSet<VendorLoginHistory> VendorLoginHistories { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AspNetRole>(entity =>
        {
            entity.HasIndex(e => e.NormalizedName, "RoleNameIndex")
                .IsUnique()
                .HasFilter("([NormalizedName] IS NOT NULL)");
        });

        modelBuilder.Entity<AspNetUser>(entity =>
        {
            entity.HasIndex(e => e.NormalizedUserName, "UserNameIndex")
                .IsUnique()
                .HasFilter("([NormalizedUserName] IS NOT NULL)");

            entity.HasMany(d => d.Roles).WithMany(p => p.Users)
                .UsingEntity<Dictionary<string, object>>(
                    "AspNetUserRole",
                    r => r.HasOne<AspNetRole>().WithMany().HasForeignKey("RoleId"),
                    l => l.HasOne<AspNetUser>().WithMany().HasForeignKey("UserId"),
                    j =>
                    {
                        j.HasKey("UserId", "RoleId");
                        j.ToTable("AspNetUserRoles");
                        j.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");
                    });
        });

        modelBuilder.Entity<Coupon>(entity =>
        {
            entity.HasKey(e => e.CouponID).HasName("PK__Coupons__384AF1DAE05F843F");
        });

        modelBuilder.Entity<CouponPic>(entity =>
        {
            entity.HasKey(e => e.CouponPicID).HasName("PK__CouponPi__440C2C0C77E5BC51");

            entity.HasOne(d => d.Coupon).WithMany(p => p.CouponPics).HasConstraintName("FK__CouponPic__Coupo__662B2B3B");
        });

        modelBuilder.Entity<Coupon_CustomerLevel>(entity =>
        {
            entity.HasKey(e => e.CouponLevelID).HasName("PK__Coupon_C__6A21765B3987E703");

            entity.HasOne(d => d.Coupon).WithMany(p => p.Coupon_CustomerLevels)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Coupon_Cu__Coupo__65370702");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerID).HasName("PK__Customer__A4AE64B85E84E3CF");

            entity.HasIndex(e => e.UserId, "UX_Customers_UserId")
                .IsUnique()
                .HasFilter("([UserId] IS NOT NULL)");

            entity.HasOne(d => d.LevelNavigation).WithMany(p => p.Customers).HasConstraintName("FK__Customers__Level__719CDDE7");
        });

        modelBuilder.Entity<CustomerBlacklist>(entity =>
        {
            entity.HasKey(e => e.BlacklistID).HasName("PK__Customer__AFDBF438D6ECC7F8");

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerBlacklists)
                .HasPrincipalKey(p => p.CustomerID)
                .HasForeignKey(d => d.CustomerID)
                .HasConstraintName("FK__CustomerB__Custo__671F4F74");
        });

        modelBuilder.Entity<CustomerCouponsRecord>(entity =>
        {
            entity.HasOne(d => d.Coupon).WithMany().HasConstraintName("FK__CustomerC__Coupo__690797E6");

            entity.HasOne(d => d.Customer).WithMany().HasConstraintName("FK__CustomerC__Custo__681373AD");
        });

        modelBuilder.Entity<CustomerLevel>(entity =>
        {
            entity.HasKey(e => e.Level).HasName("PK__Customer__AAF89963D6B7FD54");

            entity.Property(e => e.Level).ValueGeneratedNever();
        });

        modelBuilder.Entity<CustomerLoginHistory>(entity =>
        {
            entity.HasKey(e => e.LoginLogID).HasName("PK__Customer__D42E7ACC7ECADE9B");

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerLoginHistories).HasConstraintName("FK__CustomerL__Custo__69FBBC1F");
        });

        modelBuilder.Entity<CustomerOrder>(entity =>
        {
            entity.HasKey(e => e.OrderID).HasName("PK__Customer__C3905BAFF9FD75EB");

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerOrders)
                .HasPrincipalKey(p => p.CustomerID)
                .HasForeignKey(d => d.CustomerID)
                .HasConstraintName("FK__CustomerO__Custo__6FB49575");

            entity.HasOne(d => d.OrderStatus).WithMany(p => p.CustomerOrders).HasConstraintName("FK__CustomerO__Order__6EC0713C");

            entity.HasOne(d => d.Product).WithMany(p => p.CustomerOrders).HasConstraintName("FK__CustomerO__Produ__6DCC4D03");
        });

        modelBuilder.Entity<CustomerOrderFeedback>(entity =>
        {
            entity.HasKey(e => e.FeedbackID).HasName("PK__Customer__6A4BEDF606F34A80");

            entity.HasOne(d => d.Order).WithMany(p => p.CustomerOrderFeedbacks).HasConstraintName("FK__CustomerO__Order__6AEFE058");
        });

        modelBuilder.Entity<CustomerOrderMemberInfo>(entity =>
        {
            entity.HasOne(d => d.Order).WithMany().HasConstraintName("FK__CustomerO__Order__6CD828CA");
        });

        modelBuilder.Entity<CustomerProfile>(entity =>
        {
            entity.HasKey(e => e.CustomerProfilesID).HasName("PK__Customer__13B529265C5F28D1");

            entity.HasOne(d => d.Customer).WithOne(p => p.CustomerProfile)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CustomerP__Custo__70A8B9AE");
        });

        modelBuilder.Entity<CustomerSupportFeedback>(entity =>
        {
            entity.HasKey(e => e.FeedbackID).HasName("PK__Customer__6A4BEDF6BCD89495");

            entity.HasOne(d => d.Ticket).WithMany(p => p.CustomerSupportFeedbacks).HasConstraintName("FK__CustomerS__Ticke__72910220");
        });

        modelBuilder.Entity<CustomerSupportMessage>(entity =>
        {
            entity.HasKey(e => e.MessageID).HasName("PK__Customer__C87C037C4F02056D");

            entity.HasOne(d => d.Ticket).WithMany(p => p.CustomerSupportMessages).HasConstraintName("FK__CustomerS__Ticke__73852659");
        });

        modelBuilder.Entity<CustomerSupportTicket>(entity =>
        {
            entity.HasKey(e => e.TicketID).HasName("PK__Customer__712CC62725C3DE63");

            entity.Property(e => e.CreateTime)
                .HasDefaultValueSql("(getdate())")
                .HasAnnotation("Relational:DefaultConstraintName", "DF_CustomerSupportTickets_CreateTime");

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerSupportTickets)
                .HasPrincipalKey(p => p.CustomerID)
                .HasForeignKey(d => d.CustomerID)
                .HasConstraintName("FK__CustomerS__Custo__76619304");

            entity.HasOne(d => d.Employee).WithMany(p => p.CustomerSupportTickets).HasConstraintName("FK__CustomerS__Emplo__7755B73D");

            entity.HasOne(d => d.Priority).WithMany(p => p.CustomerSupportTickets).HasConstraintName("FK__CustomerS__Prior__756D6ECB");

            entity.HasOne(d => d.Status).WithMany(p => p.CustomerSupportTickets).HasConstraintName("FK__CustomerS__Statu__74794A92");

            entity.HasOne(d => d.TicketType).WithMany(p => p.CustomerSupportTickets).HasConstraintName("FK__CustomerS__Ticke__7849DB76");
        });

        modelBuilder.Entity<CustomerTripProject>(entity =>
        {
            entity.HasKey(e => e.ProjectID).HasName("PK__Customer__761ABED07798B8CF");

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerTripProjects).HasConstraintName("FK_CustomerTripProjects_Customers");
        });

        modelBuilder.Entity<DateDimension>(entity =>
        {
            entity.HasKey(e => e.DateID).HasName("PK__DateDime__A426F253FD3FD849");
        });

        modelBuilder.Entity<District>(entity =>
        {
            entity.HasKey(e => e.DistrictID).HasName("PK__District__85FDA4A6F12D8805");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.EmployeeID).HasName("PK__Employee__7AD04FF11B4A186A");

            entity.HasOne(d => d.Role).WithMany(p => p.Employees).HasConstraintName("FK__Employees__RoleI__7B264821");
        });

        modelBuilder.Entity<EmployeeProfile>(entity =>
        {
            entity.HasKey(e => e.EmployeeProfileID).HasName("PK__Employee__7CC01C3E50680016");

            entity.HasOne(d => d.Employee).WithOne(p => p.EmployeeProfile).HasConstraintName("FK__EmployeeP__Emplo__7A3223E8");
        });

        modelBuilder.Entity<EmployeeRole>(entity =>
        {
            entity.HasKey(e => e.RoleID).HasName("PK__Employee__8AFACE3A6FC89FDE");

            entity.Property(e => e.RoleID).ValueGeneratedNever();
        });

        modelBuilder.Entity<FAQ>(entity =>
        {
            entity.HasKey(e => e.FAQID).HasName("PK__FAQs__4B89D1E261AB92D8");

            entity.Property(e => e.IsActive).HasDefaultValue(false);

            entity.HasOne(d => d.Category).WithMany(p => p.FAQs).HasConstraintName("FK__FAQs__CategoryID__7C1A6C5A");
        });

        modelBuilder.Entity<FAQCategory>(entity =>
        {
            entity.HasKey(e => e.CategoryID).HasName("PK__FAQCateg__19093A2B3A40844E");
        });

        modelBuilder.Entity<GroupLocation>(entity =>
        {
            entity.HasKey(e => e.LocationId).HasName("PK__GroupLoc__E7FEA497A3BD3345");

            entity.Property(e => e.RecordTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupLocations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupLoca__Group__4C364F0E");
        });

        modelBuilder.Entity<GroupMessage>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__GroupMes__C87C0C9CF07DBBBB");

            entity.Property(e => e.SendTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupMessages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupMess__Group__41B8C09B");
        });

        modelBuilder.Entity<GroupPhoto>(entity =>
        {
            entity.HasKey(e => e.PhotoId).HasName("PK__GroupPho__21B7B5E2F0C35BE6");

            entity.Property(e => e.IsApproved).HasDefaultValue(false);
            entity.Property(e => e.UploadTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupPhotos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupPhot__Group__467D75B8");
        });

        modelBuilder.Entity<Hotel>(entity =>
        {
            entity.HasKey(e => e.HotelID).HasName("PK__Hotels__46023BBF7A426A19");

            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.District).WithMany(p => p.Hotels).HasConstraintName("FK__Hotels__District__7FEAFD3E");

            entity.HasOne(d => d.Region).WithMany(p => p.Hotels).HasConstraintName("FK_Hotels_Regions");
        });

        modelBuilder.Entity<HotelKeyword>(entity =>
        {
            entity.HasKey(e => e.HotelKeywordID).HasName("PK__HotelKey__8BFCD4A3BA6D338B");

            entity.HasOne(d => d.Hotel).WithMany(p => p.HotelKeywords)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__HotelKeyw__Hotel__58671BC9");

            entity.HasOne(d => d.Keyword).WithMany(p => p.HotelKeywords).HasConstraintName("FK__HotelKeyw__Keywo__2BFE89A6");
        });

        modelBuilder.Entity<HotelPic>(entity =>
        {
            entity.HasKey(e => e.HotelPicID).HasName("PK__HotelPic__E2D1E02DCFCA5BD7");

            entity.HasOne(d => d.Hotel).WithMany(p => p.HotelPics)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__HotelPics__Hotel__567ED357");
        });

        modelBuilder.Entity<Keyword>(entity =>
        {
            entity.HasKey(e => e.KeywordID).HasName("PK__Keywords__37C135C1E4093156");
        });

        modelBuilder.Entity<Location>(entity =>
        {
            entity.HasKey(e => e.LocationID).HasName("PK__Location__E7FEA4776306EF3C");

            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.District).WithMany(p => p.Locations).HasConstraintName("FK__Locations__Distr__04AFB25B");

            entity.HasOne(d => d.Region).WithMany(p => p.Locations).HasConstraintName("FK_Locations_Regions");
        });

        modelBuilder.Entity<LocationKeyword>(entity =>
        {
            entity.HasKey(e => e.LocationKeywordID).HasName("PK__Location__12D45024D5A0A0EF");

            entity.HasOne(d => d.Keyword).WithMany(p => p.LocationKeywords).HasConstraintName("FK__LocationK__Keywo__2FCF1A8A");

            entity.HasOne(d => d.Location).WithMany(p => p.LocationKeywords)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__LocationK__Locat__60FC61CA");
        });

        modelBuilder.Entity<LocationPic>(entity =>
        {
            entity.HasKey(e => e.LocationPicID).HasName("PK__Location__B399A857A71BD356");

            entity.HasOne(d => d.Location).WithMany(p => p.LocationPics)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__LocationP__Locat__5F141958");
        });

        modelBuilder.Entity<NewsPic>(entity =>
        {
            entity.HasKey(e => e.NewsPicID).HasName("PK__NewsPics__B274F4A32722A8B3");

            entity.HasOne(d => d.News).WithMany(p => p.NewsPics).HasConstraintName("FK__NewsPics__NewsID__0EC32C7A");
        });

        modelBuilder.Entity<NewsTable>(entity =>
        {
            entity.HasKey(e => e.NewsID).HasName("PK__NewsTabl__954EBDD35398ED42");

            entity.HasOne(d => d.Employee).WithMany(p => p.NewsTables)
                .HasPrincipalKey(p => p.EmployeeID)
                .HasForeignKey(d => d.EmployeeID)
                .HasConstraintName("FK__NewsTable__Emplo__0DCF0841");
        });

        modelBuilder.Entity<OrderPaymentInfo>(entity =>
        {
            entity.HasKey(e => e.PaymentID).HasName("PK__OrderPay__9B556A58ACECA21B");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderPaymentInfos).HasConstraintName("FK__OrderPaym__Order__09746778");

            entity.HasOne(d => d.PaymentStatus).WithMany(p => p.OrderPaymentInfos).HasConstraintName("FK__OrderPaym__Payme__0880433F");
        });

        modelBuilder.Entity<OrderStatus>(entity =>
        {
            entity.HasKey(e => e.OrderStatusID).HasName("PK__OrderSta__BC674F4127B15873");
        });

        modelBuilder.Entity<PaymentStatus>(entity =>
        {
            entity.HasKey(e => e.PayMentStatusID).HasName("PK__PaymentS__F177127FFC39D397");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductID).HasName("PK__Products__B40CC6ED2A2EE38F");

            entity.Property(e => e.CreateTime).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(false);

            entity.HasOne(d => d.Region).WithMany(p => p.Products).HasConstraintName("FK_Products_Regions");
        });

        modelBuilder.Entity<ProductAnalysis>(entity =>
        {
            entity.HasKey(e => e.ProductAnalysisID).HasName("PK__ProductA__8CE53C426DA214D2");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductAnalyses)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__ProductAn__Produ__558AAF1E");
        });

        modelBuilder.Entity<ProductPic>(entity =>
        {
            entity.HasKey(e => e.ProductPicID).HasName("PK__ProductP__47314601395101B9");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductPics)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__ProductPi__Produ__54968AE5");
        });

        modelBuilder.Entity<Products_Hotel>(entity =>
        {
            entity.HasKey(e => e.ProductHotelID).HasName("PK__Products__8E6409005DB408CD");

            entity.HasOne(d => d.Hotel).WithMany(p => p.Products_Hotels).HasConstraintName("FK__Products___Hotel__0D44F85C");

            entity.HasOne(d => d.Product).WithMany(p => p.Products_Hotels)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Products___Produ__52AE4273");
        });

        modelBuilder.Entity<Products_Location>(entity =>
        {
            entity.HasKey(e => e.ProductLocationID).HasName("PK__Products__69FC4DEE85BB1FF6");

            entity.HasOne(d => d.Location).WithMany(p => p.Products_Locations).HasConstraintName("FK__Products___Locat__0F2D40CE");

            entity.HasOne(d => d.Product).WithMany(p => p.Products_Locations)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Products___Produ__61F08603");
        });

        modelBuilder.Entity<Products_Promotion>(entity =>
        {
            entity.HasKey(e => e.ProductPromoID).HasName("PK__Products__608D45563083DF31");

            entity.HasOne(d => d.Product).WithMany(p => p.Products_Promotions)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Products___Produ__0CDAE408");

            entity.HasOne(d => d.Promo).WithMany(p => p.Products_Promotions).HasConstraintName("FK__Products___Promo__0BE6BFCF");
        });

        modelBuilder.Entity<Products_Restaurant>(entity =>
        {
            entity.HasKey(e => e.ProductRestaurantID).HasName("PK__Products__41D5C142DDC17B48");

            entity.HasOne(d => d.Product).WithMany(p => p.Products_Restaurants).HasConstraintName("FK__Products___Produ__13F1F5EB");

            entity.HasOne(d => d.Restaurant).WithMany(p => p.Products_Restaurants).HasConstraintName("FK__Products___Resta__12FDD1B2");
        });

        modelBuilder.Entity<Products_Transportation>(entity =>
        {
            entity.HasKey(e => e.ProductTransID).HasName("PK__Products__22389F371DACA2A4");

            entity.HasOne(d => d.Product).WithMany(p => p.Products_Transportations)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Products___Produ__5A4F643B");

            entity.HasOne(d => d.Transport).WithMany(p => p.Products_Transportations).HasConstraintName("FK__Products___Trans__16CE6296");
        });

        modelBuilder.Entity<Promotion>(entity =>
        {
            entity.HasKey(e => e.PromoID).HasName("PK__Promotio__33D334D0F4E20442");
        });

        modelBuilder.Entity<Region>(entity =>
        {
            entity.Property(e => e.RegionID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Restaurant>(entity =>
        {
            entity.HasKey(e => e.RestaurantID).HasName("PK__Restaura__87454CB50302960D");

            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.District).WithMany(p => p.Restaurants).HasConstraintName("FK__Restauran__Distr__1B9317B3");

            entity.HasOne(d => d.Region).WithMany(p => p.Restaurants).HasConstraintName("FK_Restaurants_Regions");
        });

        modelBuilder.Entity<RestaurantKeyword>(entity =>
        {
            entity.HasKey(e => e.RestaurantKeywordID).HasName("PK__Restaura__FCF7C15BBBB043FC");

            entity.HasOne(d => d.Keyword).WithMany(p => p.RestaurantKeywords).HasConstraintName("FK__Restauran__Keywo__46B27FE2");

            entity.HasOne(d => d.Restaurant).WithMany(p => p.RestaurantKeywords)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Restauran__Resta__67A95F59");
        });

        modelBuilder.Entity<RestaurantPic>(entity =>
        {
            entity.HasKey(e => e.RestaurantPicID).HasName("PK__Restaura__F24E88D95110BFE8");

            entity.HasOne(d => d.Restaurant).WithMany(p => p.RestaurantPics)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Restauran__Resta__689D8392");
        });

        modelBuilder.Entity<SemiSelfProduct>(entity =>
        {
            entity.HasKey(e => e.ProductID).HasName("PK__SemiSelf__B40CC6EDADF4ECE4");

            entity.Property(e => e.IsActive).HasDefaultValue(false);
        });

        modelBuilder.Entity<Semi_Hotel>(entity =>
        {
            entity.HasKey(e => e.SemiHotelID).HasName("PK__Semi_Hot__85C6B6126F35D5A3");

            entity.HasOne(d => d.Hotel).WithMany(p => p.Semi_Hotels).HasConstraintName("FK__Semi_Hote__Hotel__1D7B6025");

            entity.HasOne(d => d.Product).WithMany(p => p.Semi_Hotels).HasConstraintName("FK__Semi_Hote__Produ__1E6F845E");
        });

        modelBuilder.Entity<Semi_Location>(entity =>
        {
            entity.HasKey(e => e.SemiLocationID).HasName("PK__Semi_Loc__23B1CE3097D86A59");

            entity.HasOne(d => d.Location).WithMany(p => p.Semi_Locations).HasConstraintName("FK__Semi_Loca__Locat__1F63A897");

            entity.HasOne(d => d.Product).WithMany(p => p.Semi_Locations).HasConstraintName("FK__Semi_Loca__Produ__2057CCD0");
        });

        modelBuilder.Entity<Semi_Transportation>(entity =>
        {
            entity.HasKey(e => e.SemiTransID).HasName("PK__Semi_Tra__BC2EEA53E0BD207D");

            entity.HasOne(d => d.Product).WithMany(p => p.Semi_Transportations).HasConstraintName("FK__Semi_Tran__Produ__22401542");

            entity.HasOne(d => d.Transport).WithMany(p => p.Semi_Transportations).HasConstraintName("FK__Semi_Tran__Trans__214BF109");
        });

        modelBuilder.Entity<SerialControl>(entity =>
        {
            entity.HasKey(e => new { e.SourceTable, e.Prefix, e.DateKey }).HasName("PK__SerialCo__25497B84AB68BFD4");

            entity.Property(e => e.DateKey).IsFixedLength();
        });

        modelBuilder.Entity<SupportAnalysis>(entity =>
        {
            entity.HasOne(d => d.Date).WithMany().HasConstraintName("FK__SupportAn__DateI__24285DB4");

            entity.HasOne(d => d.Ticket).WithMany().HasConstraintName("FK__SupportAn__Ticke__2334397B");
        });

        modelBuilder.Entity<TicketPriority>(entity =>
        {
            entity.HasKey(e => e.PriorityID).HasName("PK__TicketPr__D0A3D0DE80D7285E");
        });

        modelBuilder.Entity<TicketStatus>(entity =>
        {
            entity.HasKey(e => e.StatusID).HasName("PK__TicketSt__C8EE20439921E56E");
        });

        modelBuilder.Entity<TicketType>(entity =>
        {
            entity.HasKey(e => e.TicketTypeID).HasName("PK__TicketTy__6CD6845142427B2A");
        });

        modelBuilder.Entity<TourGroup>(entity =>
        {
            entity.HasKey(e => e.GroupId).HasName("PK__TourGrou__149AF36A8AC61A4F");

            entity.Property(e => e.CreateTime).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Status).HasDefaultValue("Active");
        });

        modelBuilder.Entity<TourGroupGuest>(entity =>
        {
            entity.HasKey(e => e.GuestId).HasName("PK__TourGrou__0C423C123C0FDDBE");

            entity.Property(e => e.GuestId).ValueGeneratedNever();
            entity.Property(e => e.IsMember).HasDefaultValue(false);
            entity.Property(e => e.JoinTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Group).WithMany(p => p.TourGroupGuests)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TourGroup__Group__39237A9A");
        });

        modelBuilder.Entity<TourGroupMember>(entity =>
        {
            entity.HasKey(e => new { e.GroupId, e.CustomerId }).IsClustered(false);

            entity.Property(e => e.JoinTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Group).WithMany(p => p.TourGroupMembers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TourGroup__Group__3DE82FB7");
        });

        modelBuilder.Entity<TransportKeyword>(entity =>
        {
            entity.HasKey(e => e.TransportKeywordID).HasName("PK__Transpor__E62848DDC2C5155B");

            entity.HasOne(d => d.Keyword).WithMany(p => p.TransportKeywords).HasConstraintName("FK__Transport__Keywo__531856C7");

            entity.HasOne(d => d.Transport).WithMany(p => p.TransportKeywords)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Transport__Trans__5B438874");
        });

        modelBuilder.Entity<TransportPic>(entity =>
        {
            entity.HasKey(e => e.TransportPicID).HasName("PK__Transpor__70C30881915996D0");

            entity.HasOne(d => d.Transport).WithMany(p => p.TransportPics)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Transport__Trans__5C37ACAD");
        });

        modelBuilder.Entity<Transportation>(entity =>
        {
            entity.HasKey(e => e.TransportID).HasName("PK__Transpor__19E9A17DA216F2EC");

            entity.Property(e => e.IsActive).HasDefaultValue(true);
        });

        modelBuilder.Entity<TripProjectDetail>(entity =>
        {
            entity.HasOne(d => d.Hotel).WithMany().HasConstraintName("FK__TripProje__Hotel__27F8EE98");

            entity.HasOne(d => d.Location).WithMany().HasConstraintName("FK__TripProje__Locat__28ED12D1");

            entity.HasOne(d => d.Project).WithMany().HasConstraintName("FK__TripProje__Proje__2AD55B43");

            entity.HasOne(d => d.Restaurant).WithMany().HasConstraintName("FK__TripProje__Resta__29E1370A");

            entity.HasOne(d => d.Transport).WithMany().HasConstraintName("FK__TripProje__Trans__2BC97F7C");
        });

        modelBuilder.Entity<Vendor>(entity =>
        {
            entity.HasKey(e => e.VendorId).HasName("PK__Vendors__FC8618F35AD094D0");

            entity.Property(e => e.CreateDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Status).HasDefaultValue(true);

            entity.HasOne(d => d.User).WithOne(p => p.Vendor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vendors_AspNetUsers");
        });

        modelBuilder.Entity<VendorLoginHistory>(entity =>
        {
            entity.HasKey(e => e.LoginLogID).HasName("PK__VendorLo__D42E7ACCE8346304");

            entity.Property(e => e.LoginTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Vendor).WithMany(p => p.VendorLoginHistories)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VendorLoginHistory_Vendors");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}